# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 3600s # 1-hr
tags:
  - modern-cicd-anthos
  - gitlab
substitutions:
  _BUILD_IMAGES: "true"
  _CREATE_GITLAB: "true"
options:
    substitution_option: 'ALLOW_LOOSE'
steps:
- name: 'gcr.io/${_PROJECT_ID}/anthos-platform-installer'
  id: 'create-gitlab'
  entrypoint: 'bash'
  args:
  - '-xe'
  - '-c'
  - |
    [[ "${_CREATE_CLUSTER}" == "false" ]] && exit 0
    sed -i "s/YOUR_PROJECT_ID/${_PROJECT_ID}/g" terraform.tfvars
    sed -i "s/YOUR_PROJECT_ID/${_PROJECT_ID}/g" backend.tf
    sed -i "s/YOUR_PROJECT_ID/${_PROJECT_ID}/g" gitlab-repos/backend.tf

    terraform init
    terraform plan -out=terraform.tfplan
    terraform apply -auto-approve terraform.tfplan

    export GITLAB_HOSTNAME=$(terraform output gitlab_hostname)

    # Wait for GitLab domain to resolve
    until nslookup $${GITLAB_HOSTNAME}; do
      echo -e "\e[33mWaiting for $${GITLAB_HOSTNAME} to resolve."
      sleep 10
    done

# TODO: How to make this idempotent (if configured already, skip)
- name: 'gcr.io/${_PROJECT_ID}/anthos-platform-installer'
  id: 'configure-gitlab'
  entrypoint: 'bash'
  args:
  - '-xe'
  - '-c'
  - |
    sed -i "s/YOUR_PROJECT_ID/${_PROJECT_ID}/g" terraform.tfvars
    sed -i "s/YOUR_PROJECT_ID/${_PROJECT_ID}/g" backend.tf
    sed -i "s/YOUR_PROJECT_ID/${_PROJECT_ID}/g" gitlab-repos/backend.tf

    # Change project
    gcloud config set project ${_PROJECT_ID}

    # Copy starter repos to local workspace
    # TODO: Convert to gzip
    gsutil -m cp -r gs://${_PROJECT_ID}-starter-repos/starter-repos .

    export WORKSPACEROOT=$(pwd)
    # Configure GitLab
    gcloud container clusters get-credentials gitlab --region us-central1 --project=${_PROJECT_ID}
    export GITLAB_PASSWORD=$(kubectl get secrets gitlab-gitlab-initial-root-password -o jsonpath="{.data.password}" | base64 -d)

    # Create a personal access token with the value of the root password
    export WEBSERVICE_POD=$(kubectl get pods -l=app=webservice -o jsonpath='{.items[0].metadata.name}')
    export GITLAB_TOKEN=$${GITLAB_PASSWORD}
    kubectl exec -it $$WEBSERVICE_POD -c webservice -- /bin/bash -c "
    cd /srv/gitlab;
    bin/rails r \"
    token_digest = Gitlab::CryptoHelper.sha256 \\\"$${GITLAB_PASSWORD}\\\";
    token=PersonalAccessToken.create!(name: \\\"Anthos Platform Installer\\\", scopes: [:api], user: User.where(id: 1).first, token_digest: token_digest);
    token.save!
    \";
    " > /dev/null 2>&1 || true

    # Add the GitLab instance's SSH host key
    mkdir -p ~/.ssh
    ssh-keyscan -t rsa gitlab.${_DOMAIN} >> ~/.ssh/known_hosts

    git config --global user.email "anthos-platform-installer@example.com"
    git config --global user.name "Anthos Platform Installer"

    # Run create_repos.sh
    export TERRAFORM_AUTO_APPROVE=true
    ./create-repos.sh
